<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd">

    <!-- 创造bean的三种方式-->
    <!-- 第一种：默认构造函数创建对象-->
    <!-- 第二种；使用工厂（类）中方法创建对象
        <bean id = "ff" class = "com.test.factory.ff"></bean>
        <bean id = "xx" factory-bean = "ff" factory-method = "ff类中的xx方法"></bean>
    -->
    <!-- 第三种：使用工厂（类）中的静态方法创建对象
        <bean id  = "xx" class = "com.test.factory.ff" factory-method = "staticMethod"></bean>
    -->

    <!-- bean的作用范围scope:
        singleton:单例。
        prototype:多例。
        request:作用于web应用的请求范围。
        session：作用于web应用的会话范围。
        global-session：作用于集群环境的会话范围。
    -->

    <!-- bean的生命周期：
        singleton:
            出生：容器创建时。  init-method出生时执行的方法
            死亡：容器销毁。    destory-method死亡时执行的方法
        prototype:
            出生：使用对象时。
            死亡：长时间不用且没有对象引用时，由java垃圾回收器回收。
    -->




    <bean id="accountDao" class="com.test.dao.impl.AccountDaoImpl"></bean>
    <bean id="accountService" class="com.test.service.impl.AccountServiceImpl"></bean>
</beans>
